$date
	Wed Apr 10 10:24:48 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$scope module myalu $end
$var wire 8 ! data1 [7:0] $end
$var wire 8 " data2 [7:0] $end
$var wire 3 # select [2:0] $end
$var wire 8 $ result [7:0] $end
$var wire 8 % Ii4 [7:0] $end
$var wire 8 & Ii3 [7:0] $end
$var wire 8 ' Ii2 [7:0] $end
$var wire 8 ( Ii1 [7:0] $end
$scope module add $end
$var wire 8 ) data1 [7:0] $end
$var wire 8 * data2 [7:0] $end
$var wire 8 + result [7:0] $end
$upscope $end
$scope module and1 $end
$var wire 8 , data1 [7:0] $end
$var wire 8 - data2 [7:0] $end
$var wire 8 . result [7:0] $end
$upscope $end
$scope module forward $end
$var wire 8 / data2 [7:0] $end
$var wire 8 0 result [7:0] $end
$upscope $end
$scope module mux $end
$var wire 8 1 I1 [7:0] $end
$var wire 8 2 I2 [7:0] $end
$var wire 8 3 I3 [7:0] $end
$var wire 3 4 select [2:0] $end
$var wire 8 5 I4 [7:0] $end
$var reg 8 6 result [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 7 data1 [7:0] $end
$var wire 8 8 data2 [7:0] $end
$var wire 8 9 result [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11110 9
b10100 8
b1010 7
b10100 6
b11110 5
b0 4
b0 3
b11110 2
b10100 1
b10100 0
b10100 /
b0 .
b10100 -
b1010 ,
b11110 +
b10100 *
b1010 )
b10100 (
b11110 '
b0 &
b11110 %
b10100 $
b0 #
b10100 "
b1010 !
$end
#20
b11110 $
b11110 6
b1 #
b1 4
#40
b0 $
b0 6
b10 #
b10 4
#60
b11110 $
b11110 6
b11 #
b11 4
#80
b1010 $
b1010 6
b1111 %
b1111 5
b1111 9
b0 #
b0 4
b1010 (
b1010 0
b1010 1
b1010 "
b1010 *
b1010 -
b1010 /
b1010 8
b1111 '
b1111 +
b1111 2
b101 !
b101 )
b101 ,
b101 7
#110
